package handlers

import (
	"context"
	"fmt"
	"strings"

	"github.com/meehighlov/grats/internal/common"
	"github.com/meehighlov/grats/internal/db"
	"gorm.io/gorm"
)

func FriendInfoCallbackQueryHandler(ctx context.Context, event *common.Event, tx *gorm.DB) error {
	callbackQuery := event.GetCallbackQuery()

	params := common.CallbackFromString(callbackQuery.Data)

	baseFields := db.BaseFields{ID: params.Id}
	friends, err := (&db.Friend{BaseFields: baseFields}).Filter(ctx, tx)

	if err != nil {
		event.Logger.Error("error during fetching event info: " + err.Error())
		return err
	}

	friend := friends[0]

	// todo take from db
	friendTimezone := "–º—Å–∫"

	emoji, zodiacName := friend.GetZodiacSign()

	msgLines := []string{
		fmt.Sprintf("‚ú® %s", friend.Name),
		fmt.Sprintf("üóì %s", friend.BirthDay),
		fmt.Sprintf("%s %s", emoji, zodiacName),
		// todo add info abount bound chat
		fmt.Sprintf("üîî –ù–∞–ø–æ–º–Ω—é %s –≤ –ø–æ–ª–Ω–æ—á—å (–ø–æ %s)", *friend.GetNotifyAt(), friendTimezone),
	}

	if friend.IsTodayBirthday() {
		msgLines = append(msgLines, fmt.Sprintf("ü•≥ –°–µ–≥–æ–¥–Ω—è %s –ø—Ä–∞–∑–¥–Ω—É–µ—Ç –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", friend.Name))
	} else {
		if friend.IsThisMonthAfterToday() {
			msgLines = append(msgLines, fmt.Sprintf("üïí –£ %s —Å–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", friend.Name))
		}
	}

	msg := strings.Join(msgLines, "\n\n")

	offset := params.Pagination.Offset

	keyboard := common.NewInlineKeyboard()

	keyboard.AppendAsStack(
		*common.NewButton("‚¨ÖÔ∏è –∫ —Å–ø–∏—Å–∫—É –¥—Ä", common.CallList(offset, "<", friend.ChatId).String()),
		*common.NewButton("‚úèÔ∏è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è", common.CallEditName(params.Id).String()),
		*common.NewButton("üìÖ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥—Ä", common.CallEditBirthday(params.Id).String()),
		*common.NewButton("üóë —É–¥–∞–ª–∏—Ç—å", common.CallDelete(params.Id, params.Pagination.Offset).String()),
	)

	if _, err := event.EditCalbackMessage(ctx, msg, *keyboard.Murkup()); err != nil {
		return err
	}

	return nil
}
