package handlers

import (
	"context"
	"fmt"
	"log/slog"
	"strings"

	"github.com/meehighlov/grats/internal/config"
	"github.com/meehighlov/grats/internal/db"
	"github.com/meehighlov/grats/telegram"
)

const (
	ENTER_FRIEND_NAME_TO_DELETE_STEP = 1
	DELETE_FRIEND_REMINDER_STEP      = 2
	DELETE_DONE                      = -1
)

func enterFriendNameToDelete(event telegram.Event) (int, error) {
	ctx, cancel := context.WithTimeout(context.Background(), config.Cfg().HandlerTmeout())
	defer cancel()

	msg := "–í–≤–µ–¥–∏ –∏–º—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è‚ú®"

	event.Reply(ctx, msg)

	return DELETE_FRIEND_REMINDER_STEP, nil
}

func deleteFriendReminder(event telegram.Event) (int, error) {
	ctx, cancel := context.WithTimeout(context.Background(), config.Cfg().HandlerTmeout())
	defer cancel()

	friendName := strings.TrimSpace(event.GetMessage().Text)

	entities, err := (&db.Friend{Name: friendName}).Filter(ctx)
	if err != nil {
		event.Reply(ctx, "–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –Ω–∞–¥ —ç—Ç–∏–º —É–∂–µ —Ä–∞–±–æ—Ç–∞—é—Çüòî")
		slog.Error("error filtering friends while accepting name to delete: " + err.Error())
		return DONE, err
	}

	if len(entities) == 0 {
		event.Reply(ctx, "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–ºü§î –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞, —É—á–∏—Ç—ã–≤–∞–π –≤–µ—Ä—Ö–Ω–∏–π –∏ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä")
		return DELETE_FRIEND_REMINDER_STEP, nil
	}

	err = (&db.Friend{Name: friendName}).Delete(ctx)
	if err != nil {
		event.Reply(ctx, "–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –Ω–∞–¥ —ç—Ç–∏–º —É–∂–µ —Ä–∞–±–æ—Ç–∞—é—Çüòî")
		slog.Error("error delteting friend: " + err.Error())
		return DELETE_DONE, nil
	}

	msg := fmt.Sprintf("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è %s —É–¥–∞–ª–µ–Ω–æüëã", friendName)

	event.Reply(ctx, msg)

	return DELETE_DONE, nil
}

func DeleteFriendChatHandler() map[int]telegram.CommandStepHandler {
	return map[int]telegram.CommandStepHandler{
		ENTER_FRIEND_NAME_TO_DELETE_STEP: enterFriendNameToDelete,
		DELETE_FRIEND_REMINDER_STEP: deleteFriendReminder,
	}
}
