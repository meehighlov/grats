package handlers

import (
	"context"
	"strings"

	// "github.com/meehighlov/grats/db"
	"github.com/meehighlov/grats/internal/auth"
	"github.com/meehighlov/grats/internal/config"
	"github.com/meehighlov/grats/telegram"
)

func HelpHandler(event telegram.Event) error {
	ctx, cancel := context.WithTimeout(context.Background(), config.Cfg().HandlerTmeout())
	defer cancel()

	commands := []string{
		"–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥üôå\n",
		"/add - –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
		"/list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è",
	}

	if auth.IsAdmin(event.GetMessage().From.Username) {
		commands = append(commands, "\n–ê–¥–º–∏–Ω–∫–∞ü§°\n")
		commands = append(commands, "/access_list - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–æ—Å—Ç—É–ø–æ–ºüòè")
		commands = append(commands, "/access_grant - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ—Å—Ç—É–øüôà")
		commands = append(commands, "/access_revoke - –æ—Ç–æ–∑–≤–∞—Ç—å –¥–æ—Å—Ç—É–øü§ù")
	}

	msg := strings.Join(commands, "\n")

	event.Reply(ctx, msg)

	return nil
}
